package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
	"github.com/go-swagger/go-swagger/strfmt"
)

/*
Description of updates for an existing organization

swagger:model UpdateOrg
*/
type UpdateOrg struct {

	/* Organization contact email
	 */
	Email string `json:"email,omitempty"`

	/* Whether the organization desires to receive emails for invoices
	 */
	InvoiceEmail bool `json:"invoice_email,omitempty"`

	/* TagExpiration tag expiration

	Maximum: 2.592e+06
	Minimum: 0
	*/
	TagExpiration int64 `json:"tag_expiration,omitempty"`
}

// Validate validates this update org
func (m *UpdateOrg) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTagExpiration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateOrg) validateTagExpiration(formats strfmt.Registry) error {

	if err := validate.Minimum("tag_expiration", "body", float64(m.TagExpiration), 0, false); err != nil {
		return err
	}

	if err := validate.Maximum("tag_expiration", "body", float64(m.TagExpiration), 2.592e+06, false); err != nil {
		return err
	}

	return nil
}
