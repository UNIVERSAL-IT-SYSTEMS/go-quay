package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*Member member

swagger:model Member
*/
type Member struct {

	/* avatar
	 */
	Avatar *Avatar `json:"avatar,omitempty"`

	/* name

	Required: true
	*/
	Name *string `json:"name"`

	/* repositories
	 */
	Repositories []string `json:"repositories,omitempty"`

	/* teams
	 */
	Teams []*Team `json:"teams,omitempty"`
}

// Validate validates this member
func (m *Member) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRepositories(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTeams(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Member) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *Member) validateRepositories(formats strfmt.Registry) error {

	if swag.IsZero(m.Repositories) { // not required
		return nil
	}

	return nil
}

func (m *Member) validateTeams(formats strfmt.Registry) error {

	if swag.IsZero(m.Teams) { // not required
		return nil
	}

	return nil
}
