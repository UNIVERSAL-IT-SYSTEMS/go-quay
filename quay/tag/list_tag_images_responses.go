package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/coreos/go-quay/models"
)

type ListTagImagesReader struct {
	formats strfmt.Registry
}

func (o *ListTagImagesReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListTagImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListTagImagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListTagImagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListTagImagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListTagImagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewListTagImagesOK creates a ListTagImagesOK with default headers values
func NewListTagImagesOK() *ListTagImagesOK {
	return &ListTagImagesOK{}
}

/*ListTagImagesOK

Successful invocation
*/
type ListTagImagesOK struct {
}

func (o *ListTagImagesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/tag/{tag}/images][%d] listTagImagesOK ", 200)
}

func (o *ListTagImagesOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListTagImagesBadRequest creates a ListTagImagesBadRequest with default headers values
func NewListTagImagesBadRequest() *ListTagImagesBadRequest {
	return &ListTagImagesBadRequest{}
}

/*ListTagImagesBadRequest

Bad Request
*/
type ListTagImagesBadRequest struct {
	Payload *models.GeneralError
}

func (o *ListTagImagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/tag/{tag}/images][%d] listTagImagesBadRequest  %+v", 400, o.Payload)
}

func (o *ListTagImagesBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTagImagesUnauthorized creates a ListTagImagesUnauthorized with default headers values
func NewListTagImagesUnauthorized() *ListTagImagesUnauthorized {
	return &ListTagImagesUnauthorized{}
}

/*ListTagImagesUnauthorized

Session required
*/
type ListTagImagesUnauthorized struct {
}

func (o *ListTagImagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/tag/{tag}/images][%d] listTagImagesUnauthorized ", 401)
}

func (o *ListTagImagesUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListTagImagesForbidden creates a ListTagImagesForbidden with default headers values
func NewListTagImagesForbidden() *ListTagImagesForbidden {
	return &ListTagImagesForbidden{}
}

/*ListTagImagesForbidden

Unauthorized access
*/
type ListTagImagesForbidden struct {
}

func (o *ListTagImagesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/tag/{tag}/images][%d] listTagImagesForbidden ", 403)
}

func (o *ListTagImagesForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListTagImagesNotFound creates a ListTagImagesNotFound with default headers values
func NewListTagImagesNotFound() *ListTagImagesNotFound {
	return &ListTagImagesNotFound{}
}

/*ListTagImagesNotFound

Not found
*/
type ListTagImagesNotFound struct {
}

func (o *ListTagImagesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/tag/{tag}/images][%d] listTagImagesNotFound ", 404)
}

func (o *ListTagImagesNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
