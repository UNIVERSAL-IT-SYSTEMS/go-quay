package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/coreos/go-quay/models"
)

type ListRepoTagsReader struct {
	formats strfmt.Registry
}

func (o *ListRepoTagsReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListRepoTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListRepoTagsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListRepoTagsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListRepoTagsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListRepoTagsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewListRepoTagsOK creates a ListRepoTagsOK with default headers values
func NewListRepoTagsOK() *ListRepoTagsOK {
	return &ListRepoTagsOK{}
}

/*ListRepoTagsOK

Successful invocation
*/
type ListRepoTagsOK struct {
}

func (o *ListRepoTagsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/tag/][%d] listRepoTagsOK ", 200)
}

func (o *ListRepoTagsOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRepoTagsBadRequest creates a ListRepoTagsBadRequest with default headers values
func NewListRepoTagsBadRequest() *ListRepoTagsBadRequest {
	return &ListRepoTagsBadRequest{}
}

/*ListRepoTagsBadRequest

Bad Request
*/
type ListRepoTagsBadRequest struct {
	Payload *models.GeneralError
}

func (o *ListRepoTagsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/tag/][%d] listRepoTagsBadRequest  %+v", 400, o.Payload)
}

func (o *ListRepoTagsBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRepoTagsUnauthorized creates a ListRepoTagsUnauthorized with default headers values
func NewListRepoTagsUnauthorized() *ListRepoTagsUnauthorized {
	return &ListRepoTagsUnauthorized{}
}

/*ListRepoTagsUnauthorized

Session required
*/
type ListRepoTagsUnauthorized struct {
}

func (o *ListRepoTagsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/tag/][%d] listRepoTagsUnauthorized ", 401)
}

func (o *ListRepoTagsUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRepoTagsForbidden creates a ListRepoTagsForbidden with default headers values
func NewListRepoTagsForbidden() *ListRepoTagsForbidden {
	return &ListRepoTagsForbidden{}
}

/*ListRepoTagsForbidden

Unauthorized access
*/
type ListRepoTagsForbidden struct {
}

func (o *ListRepoTagsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/tag/][%d] listRepoTagsForbidden ", 403)
}

func (o *ListRepoTagsForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRepoTagsNotFound creates a ListRepoTagsNotFound with default headers values
func NewListRepoTagsNotFound() *ListRepoTagsNotFound {
	return &ListRepoTagsNotFound{}
}

/*ListRepoTagsNotFound

Not found
*/
type ListRepoTagsNotFound struct {
}

func (o *ListRepoTagsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/tag/][%d] listRepoTagsNotFound ", 404)
}

func (o *ListRepoTagsNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
