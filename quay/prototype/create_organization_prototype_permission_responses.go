package prototype

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/coreos/go-quay/models"
)

type CreateOrganizationPrototypePermissionReader struct {
	formats strfmt.Registry
}

func (o *CreateOrganizationPrototypePermissionReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		var result CreateOrganizationPrototypePermissionOK
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return &result, nil

	case 400:
		var result CreateOrganizationPrototypePermissionBadRequest
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, NewAPIError("createOrganizationPrototypePermissionBadRequest", &result, response.Code())

	case 401:
		var result CreateOrganizationPrototypePermissionUnauthorized
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, NewAPIError("createOrganizationPrototypePermissionUnauthorized", &result, response.Code())

	case 403:
		var result CreateOrganizationPrototypePermissionForbidden
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, NewAPIError("createOrganizationPrototypePermissionForbidden", &result, response.Code())

	case 404:
		var result CreateOrganizationPrototypePermissionNotFound
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, NewAPIError("createOrganizationPrototypePermissionNotFound", &result, response.Code())

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

/*CreateOrganizationPrototypePermissionOK

Successful invocation
*/
type CreateOrganizationPrototypePermissionOK struct {
}

func (o *CreateOrganizationPrototypePermissionOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

/*CreateOrganizationPrototypePermissionBadRequest

Bad Request
*/
type CreateOrganizationPrototypePermissionBadRequest struct {
	Payload *models.GeneralError
}

func (o *CreateOrganizationPrototypePermissionBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

/*CreateOrganizationPrototypePermissionUnauthorized

Session required
*/
type CreateOrganizationPrototypePermissionUnauthorized struct {
}

func (o *CreateOrganizationPrototypePermissionUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

/*CreateOrganizationPrototypePermissionForbidden

Unauthorized access
*/
type CreateOrganizationPrototypePermissionForbidden struct {
}

func (o *CreateOrganizationPrototypePermissionForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

/*CreateOrganizationPrototypePermissionNotFound

Not found
*/
type CreateOrganizationPrototypePermissionNotFound struct {
}

func (o *CreateOrganizationPrototypePermissionNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
