package build

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/coreos/go-quay/models"
)

// GetRepoBuildLogsReader is a Reader for the GetRepoBuildLogs structure.
type GetRepoBuildLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetRepoBuildLogsReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRepoBuildLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetRepoBuildLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetRepoBuildLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetRepoBuildLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetRepoBuildLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRepoBuildLogsOK creates a GetRepoBuildLogsOK with default headers values
func NewGetRepoBuildLogsOK() *GetRepoBuildLogsOK {
	return &GetRepoBuildLogsOK{}
}

/*GetRepoBuildLogsOK handles this case with default header values.

Successful invocation
*/
type GetRepoBuildLogsOK struct {
}

func (o *GetRepoBuildLogsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/build/{build_uuid}/logs][%d] getRepoBuildLogsOK ", 200)
}

func (o *GetRepoBuildLogsOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepoBuildLogsBadRequest creates a GetRepoBuildLogsBadRequest with default headers values
func NewGetRepoBuildLogsBadRequest() *GetRepoBuildLogsBadRequest {
	return &GetRepoBuildLogsBadRequest{}
}

/*GetRepoBuildLogsBadRequest handles this case with default header values.

Bad Request
*/
type GetRepoBuildLogsBadRequest struct {
	Payload *models.GeneralError
}

func (o *GetRepoBuildLogsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/build/{build_uuid}/logs][%d] getRepoBuildLogsBadRequest  %+v", 400, o.Payload)
}

func (o *GetRepoBuildLogsBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepoBuildLogsUnauthorized creates a GetRepoBuildLogsUnauthorized with default headers values
func NewGetRepoBuildLogsUnauthorized() *GetRepoBuildLogsUnauthorized {
	return &GetRepoBuildLogsUnauthorized{}
}

/*GetRepoBuildLogsUnauthorized handles this case with default header values.

Session required
*/
type GetRepoBuildLogsUnauthorized struct {
}

func (o *GetRepoBuildLogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/build/{build_uuid}/logs][%d] getRepoBuildLogsUnauthorized ", 401)
}

func (o *GetRepoBuildLogsUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepoBuildLogsForbidden creates a GetRepoBuildLogsForbidden with default headers values
func NewGetRepoBuildLogsForbidden() *GetRepoBuildLogsForbidden {
	return &GetRepoBuildLogsForbidden{}
}

/*GetRepoBuildLogsForbidden handles this case with default header values.

Unauthorized access
*/
type GetRepoBuildLogsForbidden struct {
}

func (o *GetRepoBuildLogsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/build/{build_uuid}/logs][%d] getRepoBuildLogsForbidden ", 403)
}

func (o *GetRepoBuildLogsForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepoBuildLogsNotFound creates a GetRepoBuildLogsNotFound with default headers values
func NewGetRepoBuildLogsNotFound() *GetRepoBuildLogsNotFound {
	return &GetRepoBuildLogsNotFound{}
}

/*GetRepoBuildLogsNotFound handles this case with default header values.

Not found
*/
type GetRepoBuildLogsNotFound struct {
}

func (o *GetRepoBuildLogsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/build/{build_uuid}/logs][%d] getRepoBuildLogsNotFound ", 404)
}

func (o *GetRepoBuildLogsNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
