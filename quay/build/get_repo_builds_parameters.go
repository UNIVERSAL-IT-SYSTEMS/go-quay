package build

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"
)

/*
GetRepoBuildsParams contains all the parameters to send to the API endpoint
for the get repo builds operation typically these are written to a http.Request
*/
type GetRepoBuildsParams struct {
	/*
	  The maximum number of builds to return
	*/
	Limit int64
	/*
	  The full path of the repository. e.g. namespace/name
	*/
	Repository string
	/*
	  Returns all builds since the given unix timecode
	*/
	Since int64
}

// WriteToRequest writes these params to a swagger request
func (o *GetRepoBuildsParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	// query param limit
	if err := r.SetQueryParam("limit", swag.FormatInt64(o.Limit)); err != nil {
		return err
	}

	// path param repository
	if err := r.SetPathParam("repository", o.Repository); err != nil {
		return err
	}

	// query param since
	if err := r.SetQueryParam("since", swag.FormatInt64(o.Since)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
