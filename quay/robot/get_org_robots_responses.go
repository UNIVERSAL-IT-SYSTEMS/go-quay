package robot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/coreos/go-quay/models"
)

type GetOrgRobotsReader struct {
	formats strfmt.Registry
}

func (o *GetOrgRobotsReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetOrgRobotsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetOrgRobotsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetOrgRobotsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetOrgRobotsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetOrgRobotsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOrgRobotsOK creates a GetOrgRobotsOK with default headers values
func NewGetOrgRobotsOK() *GetOrgRobotsOK {
	return &GetOrgRobotsOK{}
}

/*GetOrgRobotsOK

Successful invocation
*/
type GetOrgRobotsOK struct {
}

func (o *GetOrgRobotsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots][%d] getOrgRobotsOK ", 200)
}

func (o *GetOrgRobotsOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrgRobotsBadRequest creates a GetOrgRobotsBadRequest with default headers values
func NewGetOrgRobotsBadRequest() *GetOrgRobotsBadRequest {
	return &GetOrgRobotsBadRequest{}
}

/*GetOrgRobotsBadRequest

Bad Request
*/
type GetOrgRobotsBadRequest struct {
	Payload *models.GeneralError
}

func (o *GetOrgRobotsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots][%d] getOrgRobotsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgRobotsBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgRobotsUnauthorized creates a GetOrgRobotsUnauthorized with default headers values
func NewGetOrgRobotsUnauthorized() *GetOrgRobotsUnauthorized {
	return &GetOrgRobotsUnauthorized{}
}

/*GetOrgRobotsUnauthorized

Session required
*/
type GetOrgRobotsUnauthorized struct {
}

func (o *GetOrgRobotsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots][%d] getOrgRobotsUnauthorized ", 401)
}

func (o *GetOrgRobotsUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrgRobotsForbidden creates a GetOrgRobotsForbidden with default headers values
func NewGetOrgRobotsForbidden() *GetOrgRobotsForbidden {
	return &GetOrgRobotsForbidden{}
}

/*GetOrgRobotsForbidden

Unauthorized access
*/
type GetOrgRobotsForbidden struct {
}

func (o *GetOrgRobotsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots][%d] getOrgRobotsForbidden ", 403)
}

func (o *GetOrgRobotsForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrgRobotsNotFound creates a GetOrgRobotsNotFound with default headers values
func NewGetOrgRobotsNotFound() *GetOrgRobotsNotFound {
	return &GetOrgRobotsNotFound{}
}

/*GetOrgRobotsNotFound

Not found
*/
type GetOrgRobotsNotFound struct {
}

func (o *GetOrgRobotsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots][%d] getOrgRobotsNotFound ", 404)
}

func (o *GetOrgRobotsNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
