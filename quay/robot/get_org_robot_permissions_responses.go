package robot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/coreos/go-quay/models"
)

type GetOrgRobotPermissionsReader struct {
	formats strfmt.Registry
}

func (o *GetOrgRobotPermissionsReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetOrgRobotPermissionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetOrgRobotPermissionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetOrgRobotPermissionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetOrgRobotPermissionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetOrgRobotPermissionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOrgRobotPermissionsOK creates a GetOrgRobotPermissionsOK with default headers values
func NewGetOrgRobotPermissionsOK() *GetOrgRobotPermissionsOK {
	return &GetOrgRobotPermissionsOK{}
}

/*GetOrgRobotPermissionsOK

Successful invocation
*/
type GetOrgRobotPermissionsOK struct {
}

func (o *GetOrgRobotPermissionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots/{robot_shortname}/permissions][%d] getOrgRobotPermissionsOK ", 200)
}

func (o *GetOrgRobotPermissionsOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrgRobotPermissionsBadRequest creates a GetOrgRobotPermissionsBadRequest with default headers values
func NewGetOrgRobotPermissionsBadRequest() *GetOrgRobotPermissionsBadRequest {
	return &GetOrgRobotPermissionsBadRequest{}
}

/*GetOrgRobotPermissionsBadRequest

Bad Request
*/
type GetOrgRobotPermissionsBadRequest struct {
	Payload *models.GeneralError
}

func (o *GetOrgRobotPermissionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots/{robot_shortname}/permissions][%d] getOrgRobotPermissionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgRobotPermissionsBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgRobotPermissionsUnauthorized creates a GetOrgRobotPermissionsUnauthorized with default headers values
func NewGetOrgRobotPermissionsUnauthorized() *GetOrgRobotPermissionsUnauthorized {
	return &GetOrgRobotPermissionsUnauthorized{}
}

/*GetOrgRobotPermissionsUnauthorized

Session required
*/
type GetOrgRobotPermissionsUnauthorized struct {
}

func (o *GetOrgRobotPermissionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots/{robot_shortname}/permissions][%d] getOrgRobotPermissionsUnauthorized ", 401)
}

func (o *GetOrgRobotPermissionsUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrgRobotPermissionsForbidden creates a GetOrgRobotPermissionsForbidden with default headers values
func NewGetOrgRobotPermissionsForbidden() *GetOrgRobotPermissionsForbidden {
	return &GetOrgRobotPermissionsForbidden{}
}

/*GetOrgRobotPermissionsForbidden

Unauthorized access
*/
type GetOrgRobotPermissionsForbidden struct {
}

func (o *GetOrgRobotPermissionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots/{robot_shortname}/permissions][%d] getOrgRobotPermissionsForbidden ", 403)
}

func (o *GetOrgRobotPermissionsForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrgRobotPermissionsNotFound creates a GetOrgRobotPermissionsNotFound with default headers values
func NewGetOrgRobotPermissionsNotFound() *GetOrgRobotPermissionsNotFound {
	return &GetOrgRobotPermissionsNotFound{}
}

/*GetOrgRobotPermissionsNotFound

Not found
*/
type GetOrgRobotPermissionsNotFound struct {
}

func (o *GetOrgRobotPermissionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots/{robot_shortname}/permissions][%d] getOrgRobotPermissionsNotFound ", 404)
}

func (o *GetOrgRobotPermissionsNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
