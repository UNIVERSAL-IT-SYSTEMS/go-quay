package robot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/coreos/go-quay/models"
)

// GetUserRobotReader is a Reader for the GetUserRobot structure.
type GetUserRobotReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetUserRobotReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUserRobotOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetUserRobotBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetUserRobotUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetUserRobotForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUserRobotNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserRobotOK creates a GetUserRobotOK with default headers values
func NewGetUserRobotOK() *GetUserRobotOK {
	return &GetUserRobotOK{}
}

/*GetUserRobotOK handles this case with default header values.

Successful invocation
*/
type GetUserRobotOK struct {
}

func (o *GetUserRobotOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/user/robots/{robot_shortname}][%d] getUserRobotOK ", 200)
}

func (o *GetUserRobotOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserRobotBadRequest creates a GetUserRobotBadRequest with default headers values
func NewGetUserRobotBadRequest() *GetUserRobotBadRequest {
	return &GetUserRobotBadRequest{}
}

/*GetUserRobotBadRequest handles this case with default header values.

Bad Request
*/
type GetUserRobotBadRequest struct {
	Payload *models.GeneralError
}

func (o *GetUserRobotBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/user/robots/{robot_shortname}][%d] getUserRobotBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserRobotBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRobotUnauthorized creates a GetUserRobotUnauthorized with default headers values
func NewGetUserRobotUnauthorized() *GetUserRobotUnauthorized {
	return &GetUserRobotUnauthorized{}
}

/*GetUserRobotUnauthorized handles this case with default header values.

Session required
*/
type GetUserRobotUnauthorized struct {
}

func (o *GetUserRobotUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/user/robots/{robot_shortname}][%d] getUserRobotUnauthorized ", 401)
}

func (o *GetUserRobotUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserRobotForbidden creates a GetUserRobotForbidden with default headers values
func NewGetUserRobotForbidden() *GetUserRobotForbidden {
	return &GetUserRobotForbidden{}
}

/*GetUserRobotForbidden handles this case with default header values.

Unauthorized access
*/
type GetUserRobotForbidden struct {
}

func (o *GetUserRobotForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/user/robots/{robot_shortname}][%d] getUserRobotForbidden ", 403)
}

func (o *GetUserRobotForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserRobotNotFound creates a GetUserRobotNotFound with default headers values
func NewGetUserRobotNotFound() *GetUserRobotNotFound {
	return &GetUserRobotNotFound{}
}

/*GetUserRobotNotFound handles this case with default header values.

Not found
*/
type GetUserRobotNotFound struct {
}

func (o *GetUserRobotNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/user/robots/{robot_shortname}][%d] getUserRobotNotFound ", 404)
}

func (o *GetUserRobotNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
