package robot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/coreos/go-quay/models"
)

// GetOrgRobotReader is a Reader for the GetOrgRobot structure.
type GetOrgRobotReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetOrgRobotReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetOrgRobotOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetOrgRobotBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetOrgRobotUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetOrgRobotForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetOrgRobotNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOrgRobotOK creates a GetOrgRobotOK with default headers values
func NewGetOrgRobotOK() *GetOrgRobotOK {
	return &GetOrgRobotOK{}
}

/*GetOrgRobotOK handles this case with default header values.

Successful invocation
*/
type GetOrgRobotOK struct {
	Payload *models.Robot
}

func (o *GetOrgRobotOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots/{robot_shortname}][%d] getOrgRobotOK  %+v", 200, o.Payload)
}

func (o *GetOrgRobotOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Robot)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgRobotBadRequest creates a GetOrgRobotBadRequest with default headers values
func NewGetOrgRobotBadRequest() *GetOrgRobotBadRequest {
	return &GetOrgRobotBadRequest{}
}

/*GetOrgRobotBadRequest handles this case with default header values.

Bad Request
*/
type GetOrgRobotBadRequest struct {
	Payload *models.GeneralError
}

func (o *GetOrgRobotBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots/{robot_shortname}][%d] getOrgRobotBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgRobotBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgRobotUnauthorized creates a GetOrgRobotUnauthorized with default headers values
func NewGetOrgRobotUnauthorized() *GetOrgRobotUnauthorized {
	return &GetOrgRobotUnauthorized{}
}

/*GetOrgRobotUnauthorized handles this case with default header values.

Session required
*/
type GetOrgRobotUnauthorized struct {
}

func (o *GetOrgRobotUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots/{robot_shortname}][%d] getOrgRobotUnauthorized ", 401)
}

func (o *GetOrgRobotUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrgRobotForbidden creates a GetOrgRobotForbidden with default headers values
func NewGetOrgRobotForbidden() *GetOrgRobotForbidden {
	return &GetOrgRobotForbidden{}
}

/*GetOrgRobotForbidden handles this case with default header values.

Unauthorized access
*/
type GetOrgRobotForbidden struct {
}

func (o *GetOrgRobotForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots/{robot_shortname}][%d] getOrgRobotForbidden ", 403)
}

func (o *GetOrgRobotForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrgRobotNotFound creates a GetOrgRobotNotFound with default headers values
func NewGetOrgRobotNotFound() *GetOrgRobotNotFound {
	return &GetOrgRobotNotFound{}
}

/*GetOrgRobotNotFound handles this case with default header values.

Not found
*/
type GetOrgRobotNotFound struct {
}

func (o *GetOrgRobotNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/organization/{orgname}/robots/{robot_shortname}][%d] getOrgRobotNotFound ", 404)
}

func (o *GetOrgRobotNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
