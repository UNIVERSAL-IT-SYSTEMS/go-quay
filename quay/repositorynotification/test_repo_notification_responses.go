package repositorynotification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/coreos/go-quay/models"
)

// TestRepoNotificationReader is a Reader for the TestRepoNotification structure.
type TestRepoNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *TestRepoNotificationReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTestRepoNotificationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewTestRepoNotificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewTestRepoNotificationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewTestRepoNotificationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewTestRepoNotificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewTestRepoNotificationOK creates a TestRepoNotificationOK with default headers values
func NewTestRepoNotificationOK() *TestRepoNotificationOK {
	return &TestRepoNotificationOK{}
}

/*TestRepoNotificationOK handles this case with default header values.

Successful invocation
*/
type TestRepoNotificationOK struct {
}

func (o *TestRepoNotificationOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/repository/{repository}/notification/{uuid}/test][%d] testRepoNotificationOK ", 200)
}

func (o *TestRepoNotificationOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTestRepoNotificationBadRequest creates a TestRepoNotificationBadRequest with default headers values
func NewTestRepoNotificationBadRequest() *TestRepoNotificationBadRequest {
	return &TestRepoNotificationBadRequest{}
}

/*TestRepoNotificationBadRequest handles this case with default header values.

Bad Request
*/
type TestRepoNotificationBadRequest struct {
	Payload *models.GeneralError
}

func (o *TestRepoNotificationBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/repository/{repository}/notification/{uuid}/test][%d] testRepoNotificationBadRequest  %+v", 400, o.Payload)
}

func (o *TestRepoNotificationBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestRepoNotificationUnauthorized creates a TestRepoNotificationUnauthorized with default headers values
func NewTestRepoNotificationUnauthorized() *TestRepoNotificationUnauthorized {
	return &TestRepoNotificationUnauthorized{}
}

/*TestRepoNotificationUnauthorized handles this case with default header values.

Session required
*/
type TestRepoNotificationUnauthorized struct {
}

func (o *TestRepoNotificationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/repository/{repository}/notification/{uuid}/test][%d] testRepoNotificationUnauthorized ", 401)
}

func (o *TestRepoNotificationUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTestRepoNotificationForbidden creates a TestRepoNotificationForbidden with default headers values
func NewTestRepoNotificationForbidden() *TestRepoNotificationForbidden {
	return &TestRepoNotificationForbidden{}
}

/*TestRepoNotificationForbidden handles this case with default header values.

Unauthorized access
*/
type TestRepoNotificationForbidden struct {
}

func (o *TestRepoNotificationForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/repository/{repository}/notification/{uuid}/test][%d] testRepoNotificationForbidden ", 403)
}

func (o *TestRepoNotificationForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTestRepoNotificationNotFound creates a TestRepoNotificationNotFound with default headers values
func NewTestRepoNotificationNotFound() *TestRepoNotificationNotFound {
	return &TestRepoNotificationNotFound{}
}

/*TestRepoNotificationNotFound handles this case with default header values.

Not found
*/
type TestRepoNotificationNotFound struct {
}

func (o *TestRepoNotificationNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/repository/{repository}/notification/{uuid}/test][%d] testRepoNotificationNotFound ", 404)
}

func (o *TestRepoNotificationNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
