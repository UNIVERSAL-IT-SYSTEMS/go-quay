package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/coreos/go-quay/models"
)

type GetImageChangesReader struct {
	formats strfmt.Registry
}

func (o *GetImageChangesReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetImageChangesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetImageChangesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetImageChangesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetImageChangesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetImageChangesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetImageChangesOK creates a GetImageChangesOK with default headers values
func NewGetImageChangesOK() *GetImageChangesOK {
	return &GetImageChangesOK{}
}

/*GetImageChangesOK

Successful invocation
*/
type GetImageChangesOK struct {
}

func (o *GetImageChangesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/image/{image_id}/changes][%d] getImageChangesOK ", 200)
}

func (o *GetImageChangesOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetImageChangesBadRequest creates a GetImageChangesBadRequest with default headers values
func NewGetImageChangesBadRequest() *GetImageChangesBadRequest {
	return &GetImageChangesBadRequest{}
}

/*GetImageChangesBadRequest

Bad Request
*/
type GetImageChangesBadRequest struct {
	Payload *models.GeneralError
}

func (o *GetImageChangesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/image/{image_id}/changes][%d] getImageChangesBadRequest  %+v", 400, o.Payload)
}

func (o *GetImageChangesBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetImageChangesUnauthorized creates a GetImageChangesUnauthorized with default headers values
func NewGetImageChangesUnauthorized() *GetImageChangesUnauthorized {
	return &GetImageChangesUnauthorized{}
}

/*GetImageChangesUnauthorized

Session required
*/
type GetImageChangesUnauthorized struct {
}

func (o *GetImageChangesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/image/{image_id}/changes][%d] getImageChangesUnauthorized ", 401)
}

func (o *GetImageChangesUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetImageChangesForbidden creates a GetImageChangesForbidden with default headers values
func NewGetImageChangesForbidden() *GetImageChangesForbidden {
	return &GetImageChangesForbidden{}
}

/*GetImageChangesForbidden

Unauthorized access
*/
type GetImageChangesForbidden struct {
}

func (o *GetImageChangesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/image/{image_id}/changes][%d] getImageChangesForbidden ", 403)
}

func (o *GetImageChangesForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetImageChangesNotFound creates a GetImageChangesNotFound with default headers values
func NewGetImageChangesNotFound() *GetImageChangesNotFound {
	return &GetImageChangesNotFound{}
}

/*GetImageChangesNotFound

Not found
*/
type GetImageChangesNotFound struct {
}

func (o *GetImageChangesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/repository/{repository}/image/{image_id}/changes][%d] getImageChangesNotFound ", 404)
}

func (o *GetImageChangesNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
