package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/strfmt"
)

/*
GetAggregateOrgLogsParams contains all the parameters to send to the API endpoint
for the get aggregate org logs operation typically these are written to a http.Request
*/
type GetAggregateOrgLogsParams struct {
	/*
	  Latest time to which to get logs. (%m/%d/%Y %Z)
	*/
	Endtime string
	/*
	  The name of the organization
	*/
	Orgname string
	/*
	  Username for which to filter logs.
	*/
	Performer string
	/*
	  Earliest time from which to get logs. (%m/%d/%Y %Z)
	*/
	Starttime string
}

// WriteToRequest writes these params to a swagger request
func (o *GetAggregateOrgLogsParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	// query param endtime
	if err := r.SetQueryParam("endtime", o.Endtime); err != nil {
		return err
	}

	// path param orgname
	if err := r.SetPathParam("orgname", o.Orgname); err != nil {
		return err
	}

	// query param performer
	if err := r.SetQueryParam("performer", o.Performer); err != nil {
		return err
	}

	// query param starttime
	if err := r.SetQueryParam("starttime", o.Starttime); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
